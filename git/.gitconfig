[user]
	name = denis.skulimovskyy
	email = skulden13@gmail.com
	signingkey = ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAt/czwJ+LTjAjq6UvC7p5ZJS+kKJymzY7/5naza9zjfvnZHwv61emtgRmZ+H0sMSjBubw6uJXaXX3hTHuBZmYkEMiwY9r2c4aqKEr3t473spzIRE+pcUKkAL/H7kG7MuGjQQLy3hheVcbMVrxj7YyY5KeUXpUsY6cPWOtwbaZPYE= rsa-key-20141015

[url "https://github.com/ivelum/"]
	insteadOf = iv:

[url "git@github.com:ivelum/"]
	insteadOf = iv_ssh:

[url "https://github.com/skulden13/"]
	insteadOf = sd13:

[url "git@github.com:skulden13/"]
	insteadOf = sd13_ssh:

[merge]
	tool = sublimerge

[mergetool "sublimerge"]
	cmd = 'C:/Program Files (x86)/Sublime Text 2/sublime_text.exe' -n --wait \"$REMOTE\" \"$BASE\" \"$LOCAL\" \"$MERGED\" --command \"sublimerge_diff_views\"
	trustExitCode = false

[diff]
	tool = sublimerge

[difftool "sublimerge"]
	cmd = 'C:/Program Files (x86)/Sublime Text 2/sublime_text.exe' -n --wait \"$REMOTE\" \"$LOCAL\" --command \"sublimerge_diff_views\"

[core]
  editor = 'C:/Program Files (x86)/Sublime Text 2/sublime_text.exe'
	#editor = 'C:/Users/denis.skulimovskyy/AppData/Local/atom/update.exe --processStart atom.exe'
  
[creditial]
	helper = wincred

[alias]
	# Base commands
	# diff     = diff --name-status
	cm         = commit
	acm        = !git add -A && git commit
	cme        = commit --allow-empty-message
	cma        = !git commit --amend
	acma       = !git add -A && git commit --amend
	br         = branch
	co         = checkout
	df         = diff
	lg         = log --abbrev-commit --left-right --name-only
	lg1        = log --oneline
	lg1g       = !git log --oneline --graph
	st         = status
	sts        = status --short
	cia        = commit --allow-empty-message --all

	cl         = clone

	# Stash commands
	sl         = stash list
	sa         = stash apply
	ss         = stash save

	# diff
	dft        = difftool

	# Show all prfiles
	ls         = !git rev-parse --abbrev-ref HEAD | xargs git ls-tree -r --full-tree --full-name --name-only

	# Push into current remote branch
	#ps         = !git rev-parse --abbrev-ref HEAD | xargs git push origin
	#pl         = !git rev-parse --abbrev-ref HEAD | xargs git pull origin
	plr        = !git pull --rebase
	plrsu      = !git pull --rebase && git submodule update

	rbc				 = !git rebase --continue
	rbs        = !git rebase --skip
	rba        = !git rebase --abort

	ph         = !git push origin

	# Show untracked files
	stu        = status --untracked-files=no

	# Show current reference
	ref        = !git symbolic-ref HEAD 2> /dev/null

	# Show current repository name
	name       = !git remote -v | head -n1 | awk '{print $2}'

	user       = !git config --global user.name

	email      = !git config --global user.email

	# Show history
	hist    = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short

	# Show git commands
	commands   = help -a

	# Get object type
	type       = cat-file -t

	# Get file info
	info       = cat-file -p

	# Show commit logs
	logs      = !git shortlog -s -n

	# Show conflicts
	conflicts = !git ls-files --unmerged | cut -f2 | sort -u | xargs grep -El '<<<<<<<|=======|>>>>>>>'

	# Show unmergd files
	unmerged   = !git ls-files --unmerged | cut -f2 | sort -u

	# Show aliases
	aliases    = !git config -l | grep alias | cut -c 7-
	#git config --global --get-regexp alias

	# Find files
	find       = !git ls-files | grep -iE

	# Remove files which have been deleted
	remove     = !git ls-files -z --deleted | xargs -0 git rm

	# Reset origin HEAD
	return     = !git reset ORIG_HEAD

	refuse     = !git reset --hard

	undo       = !git reset --soft

	# Ignore a file
	ignore     = !([ ! -e .gitignore ] && touch .gitignore) | echo $1 >> .gitignore

	# Assume a file as unchanged
	assume     = !git update-index --assume-unchanged

	# Unassume a file
	unassume   = !git update-index --no-assume-unchanged

	# Show assumed files
	assumed    = !git ls-files -v | grep ^h | cut -c 3-

	# Pull from remote repository
	fork       = !git config --get remote.origin.url | xargs git pull

	# git remote add remote git@github.com:monolithed/.configure.git
	# git pull remote master

	root       = !pwd -P

	# Remote update (git fetch --all)
	upd        = remote update

	# Delete multiple branches
	#git branch -D `git for-each-ref --format="%(refname:short)" refs/heads/...`

	go         = !gitgo

	release    = !git commit -am $1 && git tag -a $1 -m $1 && git push --tags

	rename-tag = !git tag $1 $2 && git tag --delete $2 && git push origin :refs/tags/$2 && git push --tags

	#	revert     = checkout --

	# Replace text for all indexed files
	#	rp         = !git grep --name-only $1 | xargs sed -i '' "s/$1/$2/"

	update-submodules = !git pull --recurse-submodules && git submodule update --recursive

	su 					= !git submodule update

# Reserved cases
# gitk --follow --all -p $1
# tig --follow --all -p $1
# git gui blame $1
# git whatchanged -p $1

[color]
	diff   = true
	grep   = true
	status = true
	ui     = true

	[color "branch"]
		current = yellow reverse
		local   = yellow
		remote  = green

	[color "diff"]
		meta       = normal
		frag       = magenta bold
		old        = red bold
		new        = blue bold
		whitespace = red reverse

	[color "status"]
		added      = green
		changed    = red
		untracked  = green reverse

[log]
	decorate = full
[tgit]
	logwidthmarker = 70
